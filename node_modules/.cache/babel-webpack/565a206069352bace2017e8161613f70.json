{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs')) : typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs'], factory) : factory(global['ng4-loading-spinner'] = {}, global['@angular/core'], global.rxjs);\n})(this, function (exports, core, rxjs) {\n  'use strict';\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes} checked by tsc\r\n   */\n\n  /**\r\n   * Injectable service\r\n   * @export\r\n   */\n\n  var Ng4LoadingSpinnerService = function () {\n    /**\r\n     * Creates an instance of Ng4LoadingSpinnerService.\r\n     * @memberof Ng4LoadingSpinnerService\r\n     */\n    function Ng4LoadingSpinnerService() {\n      /**\r\n       * \\@description spinners BehaviorSubject\r\n       * \\@memberof Ng4LoadingSpinnerService\r\n       */\n      this.spinnerSubject = new rxjs.BehaviorSubject(false);\n    }\n    /**\r\n     * To show spinner\r\n     * @memberof Ng4LoadingSpinnerService\r\n     */\n\n    /**\r\n     * To show spinner\r\n     * \\@memberof Ng4LoadingSpinnerService\r\n     * @return {?}\r\n     */\n\n\n    Ng4LoadingSpinnerService.prototype.show =\n    /**\r\n    * To show spinner\r\n    * \\@memberof Ng4LoadingSpinnerService\r\n    * @return {?}\r\n    */\n    function () {\n      this.spinnerSubject.next(true);\n    };\n    /**\r\n     * To hide spinner\r\n     * @memberof Ng4LoadingSpinnerService\r\n     */\n\n    /**\r\n     * To hide spinner\r\n     * \\@memberof Ng4LoadingSpinnerService\r\n     * @return {?}\r\n     */\n\n\n    Ng4LoadingSpinnerService.prototype.hide =\n    /**\r\n    * To hide spinner\r\n    * \\@memberof Ng4LoadingSpinnerService\r\n    * @return {?}\r\n    */\n    function () {\n      this.spinnerSubject.next(false);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    Ng4LoadingSpinnerService.prototype.getMessage =\n    /**\r\n    * @return {?}\r\n    */\n    function () {\n      return this.spinnerSubject.asObservable();\n    };\n\n    Ng4LoadingSpinnerService.decorators = [{\n      type: core.Injectable\n    }];\n    /** @nocollapse */\n\n    Ng4LoadingSpinnerService.ctorParameters = function () {\n      return [];\n    };\n\n    return Ng4LoadingSpinnerService;\n  }();\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes} checked by tsc\r\n   */\n\n  /**\r\n   * \\@description\r\n   * @author Amit Mahida\r\n   * @export\r\n   */\n\n\n  var Ng4LoadingSpinnerComponent = function () {\n    /**\r\n     * Constructor\r\n     * @param spinnerService Spinner Service\r\n     * @memberof Ng4LoadingSpinnerComponent\r\n     */\n    function Ng4LoadingSpinnerComponent(spinnerService) {\n      this.spinnerService = spinnerService;\n      /**\r\n       * \\@description Default loading spinner template\r\n       * \\@memberof Ng4LoadingSpinnerComponent\r\n       */\n\n      this._template = \"\\n  <div class=\\\"lds-roller\\\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\";\n      /**\r\n       * \\@description Loading text\r\n       * \\@memberof Ng4LoadingSpinnerComponent\r\n       */\n\n      this._loadingText = '';\n      /**\r\n       * \\@description Defines threhold for not to diplay if time is less than 500ms\r\n       * \\@memberof Ng4LoadingSpinnerComponent\r\n       */\n\n      this._threshold = 500;\n      /**\r\n       * \\@description Defines timeout to hide after time 5000ms\r\n       * \\@memberof Ng4LoadingSpinnerComponent\r\n       */\n\n      this._timeout = 5000;\n      /**\r\n       * \\@description Defines z-index property of the loading text\r\n       * \\@memberof Ng4LoadingSpinnerComponent\r\n       */\n\n      this._zIndex = 9999;\n      /**\r\n       * \\@description Show/hide spinner\r\n       * \\@memberof Ng4LoadingSpinnerComponent\r\n       */\n\n      this.showSpinner = false;\n      this.createServiceSubscription();\n    }\n\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"zIndex\", {\n      get:\n      /**\r\n      * \\@description returns z-index for input text\r\n      * \\@readonly\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @return {?}\r\n      */\n      function () {\n        return this._zIndex;\n      },\n      set:\n      /**\r\n      * \\@description Sets z-index for input text\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function (value) {\n        this._zIndex = value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"template\", {\n      get:\n      /**\r\n      * \\@description Gives the current template\r\n      * \\@readonly\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @return {?}\r\n      */\n      function () {\n        return this._template;\n      },\n      set:\n      /**\r\n      * \\@description Accepts custom template\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function (value) {\n        this._template = value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"loadingText\", {\n      get:\n      /**\r\n      * \\@description Gives loading text\r\n      * \\@readonly\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @return {?}\r\n      */\n      function () {\n        return this._loadingText;\n      },\n      set:\n      /**\r\n      * \\@description Accepts loading text string\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function (value) {\n        this._loadingText = value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"threshold\", {\n      get:\n      /**\r\n      * \\@description\r\n      * \\@readonly\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @return {?}\r\n      */\n      function () {\n        return this._threshold;\n      },\n      set:\n      /**\r\n      * \\@description Accepts external threshold\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function (value) {\n        this._threshold = value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"timeout\", {\n      get:\n      /**\r\n      * \\@description\r\n      * \\@readonly\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @return {?}\r\n      */\n      function () {\n        return this._timeout;\n      },\n      set:\n      /**\r\n      * \\@description Accepts external timeout\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function (value) {\n        this._timeout = value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    /**\r\n     * Destroy function\r\n     * @memberof Ng4LoadingSpinnerComponent\r\n     */\n\n    /**\r\n     * Destroy function\r\n     * \\@memberof Ng4LoadingSpinnerComponent\r\n     * @return {?}\r\n     */\n\n    Ng4LoadingSpinnerComponent.prototype.ngOnDestroy =\n    /**\r\n    * Destroy function\r\n    * \\@memberof Ng4LoadingSpinnerComponent\r\n    * @return {?}\r\n    */\n    function () {\n      this.subscription.unsubscribe();\n    };\n    /**\r\n     * Create service subscription\r\n     * @memberof Ng4LoadingSpinnerComponent\r\n     */\n\n    /**\r\n     * Create service subscription\r\n     * \\@memberof Ng4LoadingSpinnerComponent\r\n     * @return {?}\r\n     */\n\n\n    Ng4LoadingSpinnerComponent.prototype.createServiceSubscription =\n    /**\r\n    * Create service subscription\r\n    * \\@memberof Ng4LoadingSpinnerComponent\r\n    * @return {?}\r\n    */\n    function () {\n      var _this = this;\n\n      var\n      /** @type {?} */\n      thresholdTimer;\n      var\n      /** @type {?} */\n      timeoutTimer;\n      this.subscription = this.spinnerService.getMessage().subscribe(function (show) {\n        if (show) {\n          if (thresholdTimer) {\n            return;\n          }\n\n          thresholdTimer = setTimeout(function () {\n            thresholdTimer = null;\n            this.showSpinner = show;\n            timeoutTimer = setTimeout(function () {\n              timeoutTimer = null;\n              this.showSpinner = false;\n            }.bind(this), this.timeout);\n          }.bind(_this), _this.threshold);\n        } else {\n          if (thresholdTimer) {\n            clearTimeout(thresholdTimer);\n            thresholdTimer = null;\n          }\n\n          clearTimeout(timeoutTimer);\n          timeoutTimer = null;\n          _this.showSpinner = false;\n        }\n      });\n    };\n\n    Ng4LoadingSpinnerComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ng4-loading-spinner',\n        template: \"<div #spinnerContainer [class]=\\\"showSpinner ? 'visible spinner center' : 'hidden spinner center'\\\" [innerHTML]=\\\"template\\\">     </div> <div id=\\\"loading-spinner-text\\\" class=\\\"loading-spinner-text\\\" [style.zIndex]=\\\"zIndex\\\" [class]=\\\"showSpinner ? 'visible loading-text' : 'hidden loading-text'\\\"> {{loadingText}} </div> \",\n        styles: [\".spinner { position: fixed; padding: 0px; top: 0; left: 0; height: 100%; width: 100%; z-index: 9998; background: #000; opacity: 0.6; transition: opacity 0.3s linear; } .center { margin: auto; width: 100%; } .loading-text { position: fixed; top: 0; width: 100%; height: 100%; left: 0; padding: 0; margin: 0; color: #FFF; font-family: sans-serif; background: transparent; text-align: center; padding-top: 33%; } .spinner img { position: fixed; padding: 0px; /* height: 100%; width: 100%; top: 0; left: 0; */ z-index: 10; background: #000; opacity: 0.6; transition: opacity 0.3s linear; } .hidden { visibility: hidden; opacity: 0; transition: visibility 0s 0.3s, opacity 0.3s linear; } .visible { visibility: visible; } .lds-roller { display: inline-block; position: relative; width: 64px; height: 64px; left: 48%; top: 47%; } .lds-roller div { animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite; transform-origin: 32px 32px; } .lds-roller div:after { content: \\\" \\\"; display: block; position: absolute; width: 6px; height: 6px; border-radius: 50%; background: #fff; margin: -3px 0 0 -3px; } .lds-roller div:nth-child(1) { animation-delay: -0.036s; } .lds-roller div:nth-child(1):after { top: 50px; left: 50px; } .lds-roller div:nth-child(2) { animation-delay: -0.072s; } .lds-roller div:nth-child(2):after { top: 54px; left: 45px; } .lds-roller div:nth-child(3) { animation-delay: -0.108s; } .lds-roller div:nth-child(3):after { top: 57px; left: 39px; } .lds-roller div:nth-child(4) { animation-delay: -0.144s; } .lds-roller div:nth-child(4):after { top: 58px; left: 32px; } .lds-roller div:nth-child(5) { animation-delay: -0.18s; } .lds-roller div:nth-child(5):after { top: 57px; left: 25px; } .lds-roller div:nth-child(6) { animation-delay: -0.216s; } .lds-roller div:nth-child(6):after { top: 54px; left: 19px; } .lds-roller div:nth-child(7) { animation-delay: -0.252s; } .lds-roller div:nth-child(7):after { top: 50px; left: 14px; } .lds-roller div:nth-child(8) { animation-delay: -0.288s; } .lds-roller div:nth-child(8):after { top: 45px; left: 10px; } @keyframes lds-roller { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } #loading-spinner-text { font-size: 26px; } .loading-spinner-text { font-size: 26px; }\"],\n        encapsulation: core.ViewEncapsulation.None\n      }]\n    }];\n    /** @nocollapse */\n\n    Ng4LoadingSpinnerComponent.ctorParameters = function () {\n      return [{\n        type: Ng4LoadingSpinnerService\n      }];\n    };\n\n    Ng4LoadingSpinnerComponent.propDecorators = {\n      \"zIndex\": [{\n        type: core.Input\n      }],\n      \"template\": [{\n        type: core.Input\n      }],\n      \"loadingText\": [{\n        type: core.Input\n      }],\n      \"threshold\": [{\n        type: core.Input\n      }],\n      \"timeout\": [{\n        type: core.Input\n      }]\n    };\n    return Ng4LoadingSpinnerComponent;\n  }();\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes} checked by tsc\r\n   */\n\n\n  var Ng4LoadingSpinnerModule = function () {\n    function Ng4LoadingSpinnerModule() {}\n    /**\r\n     * @return {?}\r\n     */\n\n\n    Ng4LoadingSpinnerModule.forRoot =\n    /**\r\n    * @return {?}\r\n    */\n    function () {\n      return {\n        ngModule: Ng4LoadingSpinnerModule,\n        providers: [Ng4LoadingSpinnerService]\n      };\n    };\n\n    Ng4LoadingSpinnerModule.decorators = [{\n      type: core.NgModule,\n      args: [{\n        imports: [],\n        declarations: [Ng4LoadingSpinnerComponent],\n        exports: [Ng4LoadingSpinnerComponent],\n        providers: [Ng4LoadingSpinnerService]\n      }]\n    }];\n    return Ng4LoadingSpinnerModule;\n  }();\n\n  exports.Ng4LoadingSpinnerModule = Ng4LoadingSpinnerModule;\n  exports.Ng4LoadingSpinnerService = Ng4LoadingSpinnerService;\n  exports.Ng4LoadingSpinnerComponent = Ng4LoadingSpinnerComponent;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":null,"metadata":{},"sourceType":"script"}