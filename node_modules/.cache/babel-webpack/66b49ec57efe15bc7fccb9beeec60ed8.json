{"ast":null,"code":"import JSZip from 'jszip';\n/**\r\n * Reads XLSX file in a browser.\r\n * @param  {file} file - A file being uploaded in the browser.\r\n * @return {Promise} Resolves to an object holding XLSX file entries.\r\n */\n\nexport default function unpackXlsxFile(file) {\n  var files = {};\n  return JSZip.loadAsync(file).then(function (zip) {\n    var files = [];\n    zip.forEach(function (relativePath, zipEntry) {\n      if (!zipEntry.dir) {\n        files.push(zipEntry.name);\n      }\n    });\n    var entries = {};\n    return Promise.all(files.map(function (file) {\n      return zip.file(file).async('string').then(function (content) {\n        return entries[file] = content;\n      });\n    })).then(function () {\n      return entries;\n    });\n  });\n} //# sourceMappingURL=unpackXlsxFileBrowser.js.map","map":null,"metadata":{},"sourceType":"module"}