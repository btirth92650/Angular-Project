{"version":3,"file":"auth0-angular-jwt.umd.js","sources":["../../../projects/angular-jwt/src/lib/jwtoptions.token.ts","../../../projects/angular-jwt/src/lib/jwthelper.service.ts","../../../projects/angular-jwt/src/lib/jwt.interceptor.ts","../../../projects/angular-jwt/src/lib/angular-jwt.module.ts","../../../projects/angular-jwt/src/index.ts","../../../projects/angular-jwt/src/auth0-angular-jwt.ts"],"names":["InjectionToken","Injectable","Inject","from","mergeMap","DOCUMENT","HTTP_INTERCEPTORS","NgModule","Optional","SkipSelf"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const JWT_OPTIONS = new InjectionToken('JWT_OPTIONS');\n","import { HttpRequest } from \"@angular/common/http\";\n// tslint:disable:no-bitwise\n\nimport { Injectable, Inject } from \"@angular/core\";\nimport { JWT_OPTIONS } from \"./jwtoptions.token\";\n\n@Injectable()\nexport class JwtHelperService {\n  tokenGetter: () => string;\n\n  constructor(@Inject(JWT_OPTIONS) config = null) {\n    this.tokenGetter = (config && config.tokenGetter) || function () {};\n  }\n\n  public urlBase64Decode(str: string): string {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0: {\n        break;\n      }\n      case 2: {\n        output += \"==\";\n        break;\n      }\n      case 3: {\n        output += \"=\";\n        break;\n      }\n      default: {\n        throw new Error(\"Illegal base64url string!\");\n      }\n    }\n    return this.b64DecodeUnicode(output);\n  }\n\n  // credits for decoder goes to https://github.com/atk\n  private b64decode(str: string): string {\n    const chars =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    let output = \"\";\n\n    str = String(str).replace(/=+$/, \"\");\n\n    if (str.length % 4 === 1) {\n      throw new Error(\n        \"'atob' failed: The string to be decoded is not correctly encoded.\"\n      );\n    }\n\n    for (\n      // initialize result and counters\n      let bc = 0, bs: any, buffer: any, idx = 0;\n      // get next character\n      (buffer = str.charAt(idx++));\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer &&\n      ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4)\n        ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n        : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  }\n\n  private b64DecodeUnicode(str: any) {\n    return decodeURIComponent(\n      Array.prototype.map\n        .call(this.b64decode(str), (c: any) => {\n          return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join(\"\")\n    );\n  }\n\n  public decodeToken<T = any>(token: string = this.tokenGetter()): T {\n    if (!token || token === \"\") {\n      return null;\n    }\n\n    const parts = token.split(\".\");\n\n    if (parts.length !== 3) {\n      throw new Error(\n        \"The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.\"\n      );\n    }\n\n    const decoded = this.urlBase64Decode(parts[1]);\n    if (!decoded) {\n      throw new Error(\"Cannot decode the token.\");\n    }\n\n    return JSON.parse(decoded);\n  }\n\n  public getTokenExpirationDate(\n    token: string = this.tokenGetter()\n  ): Date | null {\n    let decoded: any;\n    decoded = this.decodeToken(token);\n\n    if (!decoded || !decoded.hasOwnProperty(\"exp\")) {\n      return null;\n    }\n\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n\n    return date;\n  }\n\n  public isTokenExpired(\n    token: string = this.tokenGetter(),\n    offsetSeconds?: number\n  ): boolean {\n    if (!token || token === \"\") {\n      return true;\n    }\n    const date = this.getTokenExpirationDate(token);\n    offsetSeconds = offsetSeconds || 0;\n\n    if (date === null) {\n      return false;\n    }\n\n    return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n  }\n\n  public getAuthScheme(\n    authScheme: Function | string | undefined,\n    request: HttpRequest<any>\n  ): string {\n    if (typeof authScheme === \"function\") {\n      return authScheme(request);\n    }\n\n    return authScheme;\n  }\n}\n","import { Injectable, Inject } from \"@angular/core\";\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from \"@angular/common/http\";\nimport { DOCUMENT } from \"@angular/common\";\nimport { JwtHelperService } from \"./jwthelper.service\";\nimport { JWT_OPTIONS } from \"./jwtoptions.token\";\n\nimport { mergeMap } from \"rxjs/operators\";\nimport { from, Observable } from \"rxjs\";\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  tokenGetter: (\n    request?: HttpRequest<any>\n  ) => string | null | Promise<string | null>;\n  headerName: string;\n  authScheme: string | ((request?: HttpRequest<any>) => string);\n  allowedDomains: Array<string | RegExp>;\n  disallowedRoutes: Array<string | RegExp>;\n  throwNoTokenError: boolean;\n  skipWhenExpired: boolean;\n  standardPorts: string[] = [\"80\", \"443\"];\n\n  constructor(\n    @Inject(JWT_OPTIONS) config: any,\n    public jwtHelper: JwtHelperService,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.tokenGetter = config.tokenGetter;\n    this.headerName = config.headerName || \"Authorization\";\n    this.authScheme =\n      config.authScheme || config.authScheme === \"\"\n        ? config.authScheme\n        : \"Bearer \";\n    this.allowedDomains = config.allowedDomains || [];\n    this.disallowedRoutes = config.disallowedRoutes || [];\n    this.throwNoTokenError = config.throwNoTokenError || false;\n    this.skipWhenExpired = config.skipWhenExpired;\n  }\n\n  isAllowedDomain(request: HttpRequest<any>): boolean {\n    const requestUrl: URL = new URL(request.url, this.document.location.origin);\n\n    // If the host equals the current window origin,\n    // the domain is allowed by default\n    if (requestUrl.host === this.document.location.host) {\n      return true;\n    }\n\n    // If not the current domain, check the allowed list\n    const hostName = `${requestUrl.hostname}${\n      requestUrl.port && !this.standardPorts.includes(requestUrl.port)\n        ? \":\" + requestUrl.port\n        : \"\"\n    }`;\n\n    return (\n      this.allowedDomains.findIndex((domain) =>\n        typeof domain === \"string\"\n          ? domain === hostName\n          : domain instanceof RegExp\n          ? domain.test(hostName)\n          : false\n      ) > -1\n    );\n  }\n\n  isDisallowedRoute(request: HttpRequest<any>): boolean {\n    const requestedUrl: URL = new URL(\n      request.url,\n      this.document.location.origin\n    );\n\n    return (\n      this.disallowedRoutes.findIndex((route: string | RegExp) => {\n        if (typeof route === \"string\") {\n          const parsedRoute: URL = new URL(\n            route,\n            this.document.location.origin\n          );\n          return (\n            parsedRoute.hostname === requestedUrl.hostname &&\n            parsedRoute.pathname === requestedUrl.pathname\n          );\n        }\n\n        if (route instanceof RegExp) {\n          return route.test(request.url);\n        }\n\n        return false;\n      }) > -1\n    );\n  }\n\n  handleInterception(\n    token: string | null,\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ) {\n    const authScheme = this.jwtHelper.getAuthScheme(this.authScheme, request);\n    let tokenIsExpired = false;\n\n    if (!token && this.throwNoTokenError) {\n      throw new Error(\"Could not get token from tokenGetter function.\");\n    }\n\n    if (this.skipWhenExpired) {\n      tokenIsExpired = token ? this.jwtHelper.isTokenExpired(token) : true;\n    }\n\n    if (token && tokenIsExpired && this.skipWhenExpired) {\n      request = request.clone();\n    } else if (token) {\n      request = request.clone({\n        setHeaders: {\n          [this.headerName]: `${authScheme}${token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (!this.isAllowedDomain(request) || this.isDisallowedRoute(request)) {\n      return next.handle(request);\n    }\n    const token = this.tokenGetter(request);\n\n    if (token instanceof Promise) {\n      return from(token).pipe(\n        mergeMap((asyncToken: string | null) => {\n          return this.handleInterception(asyncToken, request, next);\n        })\n      );\n    } else {\n      return this.handleInterception(token, request, next);\n    }\n  }\n}\n","import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n  Provider,\n} from \"@angular/core\";\nimport { HttpRequest, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { JwtInterceptor } from \"./jwt.interceptor\";\nimport { JWT_OPTIONS } from \"./jwtoptions.token\";\nimport { JwtHelperService } from \"./jwthelper.service\";\n\nexport interface JwtConfig {\n  tokenGetter?: (\n    request?: HttpRequest<any>\n  ) => string | null | Promise<string | null>;\n  headerName?: string;\n  authScheme?: string | ((request?: HttpRequest<any>) => string);\n  allowedDomains?: Array<string | RegExp>;\n  disallowedRoutes?: Array<string | RegExp>;\n  throwNoTokenError?: boolean;\n  skipWhenExpired?: boolean;\n}\n\nexport interface JwtModuleOptions {\n  jwtOptionsProvider?: Provider;\n  config?: JwtConfig;\n}\n\n@NgModule()\nexport class JwtModule {\n  constructor(@Optional() @SkipSelf() parentModule: JwtModule) {\n    if (parentModule) {\n      throw new Error(\n        \"JwtModule is already loaded. It should only be imported in your application's main module.\"\n      );\n    }\n  }\n  static forRoot(options: JwtModuleOptions): ModuleWithProviders<JwtModule> {\n    return {\n      ngModule: JwtModule,\n      providers: [\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: JwtInterceptor,\n          multi: true,\n        },\n        options.jwtOptionsProvider || {\n          provide: JWT_OPTIONS,\n          useValue: options.config,\n        },\n        JwtHelperService,\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of angular-jwt\n */\n\nexport * from './lib/jwt.interceptor';\nexport * from './lib/jwthelper.service';\nexport * from './lib/jwtoptions.token';\nexport * from './lib/angular-jwt.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}